import React from 'react';
import { graphql, StaticQuery, Link } from 'gatsby';

import Layout from '../../components/layout';
import { ANewTab, BannerImage } from '../../components/util';

const Elotrack = ({ bannerImage }) => (
  <Layout
    title="Elotrack"
    description="About Elotrack - a player statistics tracker application for League of Legends"
  >
    <center>
      <h1>Elotrack</h1>
    </center>

    <p>
      <b>Elotrack</b> was a tool similar to{' '}
      <Link to="/projects/osutrack/">osu!track</Link> designed to allow players
      of the game{' '}
      <ANewTab to="https://leagueoflegends.com/" text="League of Legends" /> to
      track their rank and other statistics about their account over time. It
      came second in a considerable collection of similar tracker tools
      including <Link to="/blog/building-robintrack/">Robintrack</Link> and{' '}
      <Link to="/projects/polotrack/">Polotrack</Link>.
    </p>

    <h2>Current Status</h2>
    <p>
      Elotrack is no longer in existence. First of all, League of Legends is an
      extremely popular game, there were several much more mature and popular
      tools such as <ANewTab to="https://na.op.gg/" text="op.gg" /> and{' '}
      <ANewTab to="https://www.leaguespy.net/" text="LeagueSpy" /> that already
      filled the niche that this tool provided. As a result, this tool recieved
      basically zero attention or interest when I shared it, making my desire to
      work on and maintain it much smaller. My primitive web design skills at
      the time with the <code>&lt;table&gt;</code>-based UI, terrible color
      scheme, non-responsive design, and general lack of finesse and style
      didn&apos;t help either. Secondly, the API endpoint that was keeping
      Elotrack alive was deprecated and finally killed off entirely, taking
      Elotrack with it. It was originally hosted on the elotrack.net domain, but
      it has since expired and I&apos;ve not renewed it.
    </p>

    <BannerImage
      img={bannerImage}
      alt="A screenshot of the Elotrack interface"
    />

    <h2>Tech Stack</h2>
    <p>
      Elotrack was built with a Ruby backend using the{' '}
      <ANewTab to="http://sinatrarb.com/" text="Sinatra" /> webserver framework.
      It used a MySQL database, some CLI scripts also written in Ruby and
      executed via Cron to generate some of the tables on the homepage and
      tablulate statistics, and had a frontend built with JQuery. Similarly to
      osu!track, much of the site content was generated by the Ruby with the
      resulting HTML being sent directly to the user. This was pretty much the
      last of my websites to be built in this manner; the rest were made using
      React and did most of their rendering client-side, pulling data from API
      endpoints.
    </p>
    <p>
      Despite not receiving any real traffic or popularity from users tracking
      their own accounts&apos; stats, automated scripts ran periodically to
      track the top players in all of League of Legend&apos;s regions. A pretty
      hefty amount of data ended up being collected, which prompted me to put in
      the effort to learn how to optimize the database with proper indices and
      come up with a better schema. Many of the things I learned while working
      on Elotrack including how to manage a full database migration and better
      administer relational databases have proven useful on other projects
      since.
    </p>
  </Layout>
);

const query = graphql`
  {
    bannerImage: file(relativePath: { eq: "projects/elotrack/elotrack.png" }) {
      childImageSharp {
        gatsbyImageData(layout: FULL_WIDTH, formats: [AVIF, AUTO, WEBP])
      }
    }
  }
`;

const WrappedElotrack = () => <StaticQuery query={query} render={Elotrack} />;

export default WrappedElotrack;
